name: CI

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - '*'

jobs:
  frontend:
    name: Frontend Quality Gate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Lint (frontend)
        run: npm run --workspace frontend lint
      - name: Typecheck (frontend)
        run: npm run --workspace frontend typecheck
      - name: Build (frontend)
        run: npm run --workspace frontend build
      - name: Test (frontend)
        run: npm run --workspace frontend --if-present test

  backend:
    name: Backend Quality Gate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Lint (backend)
        run: npm run --workspace backend lint
      - name: Typecheck (backend)
        run: npm run --workspace backend typecheck
      - name: Unit tests (backend)
        run: npm run --workspace backend test
      - name: E2E tests (backend)
        run: npm run --workspace backend test:e2e
      - name: Build (backend)
        run: npm run --workspace backend build

  deploy:
    name: Deploy Placeholders
    needs:
      - frontend
      - backend
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Placeholder Upload frontend to S3 and invalidate CloudFront
        run: |
          echo "TODO: Implement S3 upload and CloudFront invalidation"
      - name: Placeholder Deploy backend container to ECS
        run: |
          echo "TODO: Implement ECS deployment with blue/green strategy"
